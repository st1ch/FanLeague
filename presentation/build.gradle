buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'me.tatarka:gradle-retrolambda:3.2.3'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

    applicationId globalConfiguration.getAt("androidApplicationId")
    versionCode globalConfiguration.getAt("androidVersionCode")
    versionName globalConfiguration.getAt("androidVersionName")
    testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
    testApplicationId globalConfiguration.getAt("testApplicationId")

    multiDexEnabled true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage'            //Some libraries have issues with this.
    disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
    disable 'IconDensities'             //For testing purpose. This is safe to remove.
    disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
  }

  signingConfigs {
    config {
      storeFile file('../buildsystem/key_store.jks')
      keyAlias 'fan1211237352'
      keyPassword 'fan1211237352'
      storePassword 'fan1211237352'
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.config
      debuggable false
    }
    debug {
      debuggable true
      testCoverageEnabled true
      signingConfig signingConfigs.config
    }
  }

  productFlavors {
    production {
      applicationId globalConfiguration.getAt("androidApplicationId")
      resValue "string", "app_name", "FanLeague"
      resValue "string", "facebook_app_id", "525728847631290"
      resValue "string", "google_map_id", "AIzaSyAfoEET47Kl-n_kMoIdN4c1y78qQoaNfK8"
      resValue "string", "youtube_player_id", "AIzaSyBI_pP6-odT7oUk7vNGfXiOaJGMMhK3ssI"
      signingConfig signingConfigs.config
    }

    prototype {
      applicationId globalConfiguration.getAt("androidApplicationId")
      resValue "string", "app_name", "FanLeagueProt"
      resValue "string", "facebook_app_id", "525728847631290"
      resValue "string", "google_map_id", "AIzaSyAfoEET47Kl-n_kMoIdN4c1y78qQoaNfK8"
      resValue "string", "youtube_player_id", "AIzaSyBI_pP6-odT7oUk7vNGfXiOaJGMMhK3ssI"
    }
  }

  sourceSets {
    main {
      assets.srcDirs = ['src/main/assets', 'src/main/assets/']
    }
  }
}

dependencies {
  def presentationDependencies = rootProject.ext.presentationDependencies
  def presentationTestDependencies = rootProject.ext.presentationTestDependencies
  def developmentDependencies = rootProject.ext.developmentDependencies

  compile project(':domain')
  compile project(':data')

  compile presentationDependencies.gcm
  compile presentationDependencies.auth
  compile presentationDependencies.plus
  compile presentationDependencies.maps
  compile presentationDependencies.firebase

  compile presentationDependencies.appcompat
  compile presentationDependencies.support
  compile presentationDependencies.design
  compile presentationDependencies.cardView
  compile presentationDependencies.recyclerView
  compile presentationDependencies.constraintLayout
  compile presentationDependencies.swipeLayout
  compile presentationDependencies.charts

  compile presentationDependencies.dagger
  apt presentationDependencies.daggerCompiler

  compile presentationDependencies.butterKnife
  apt presentationDependencies.butterKnifeCompiler

  compile presentationDependencies.rxJava
  compile presentationDependencies.rxAndroid

  compile presentationDependencies.picasso

  compile presentationDependencies.facebook

  provided presentationDependencies.javaxAnnotation

  androidTestCompile presentationTestDependencies.mockito
  androidTestCompile presentationTestDependencies.dexmaker
  androidTestCompile presentationTestDependencies.dexmakerMockito
  androidTestCompile presentationTestDependencies.espresso
  androidTestCompile presentationTestDependencies.testingSupportLib
  androidTestCompile presentationTestDependencies.androidAnnotations

  //Development
  compile developmentDependencies.leakCanary

  compile 'com.android.support:multidex:1.0.1'

}


